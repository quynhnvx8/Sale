<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnClose.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADr0AAA69AUf7kK0AAAFWSURBVDhPYyAH+Kc1/dE28bKCckkDGnZRn9RtI1+SZYCR
        V+aXF0/f/Fe1Dn+HYkB60Yz/6BjdBm2n+I8gzTAM8gYnp5A0WDM2gG4gCGs6xMINAGGHsKIfOA3ABrLK
        Zl8HGQIMg78gA2xDiv7jNODnz19gGtkFMKxpHwM1oBjTAHTFd+88xMAgcfvwsr9O4cXfUQzApmHp0m3/
        V63a9X/jxgP/Z83d/H/Rou2rYQaw8UqpYTVg5sy1/+ct2AjWvHr1rv8bNhz4v3Xrkf8LFm6HG8ApLGMK
        jh5sBsxfuPH/smXb4Zo3bz7yf9euE/+XLNsNNwAezdgMQNe8c+eJ//v2nf2/YtW+/8uX7iZsALrmvXvP
        /D906Pz/VWsP/l+z+gBhAzaC/LwF4ux9+yCajx+/8n/t+kP/168/tBbFgAkztjaCBEjB1o6htWDNMAAy
        jRQM1QYEDAwAsjctdA1QmUYAAAAASUVORK5CYII=
</value>
  </data>
  <data name="btnSave.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADr0AAA69AUf7kK0AAAIKSURBVDhPlZI7iBpRFIYnqIURY3DTKBKEgBAVBZH4QF0f
        WAi6GBUf4AMFGzFYBBXFwrXSIo1CUsjapEohFjbpY5MiURE7XRRkJWoKCYJByMmdmRuWhXV388HAvXP+
        /7/nzFziHh4rFIqgSCR6hfcPx+l0Omq12tdkMgnxePyXUCjU4dLdcLnck0Kh8KHdbsN4PAa0BhQGkUhk
        isp8WnWEUCgUHwwGV51OBywWCzSbTZjP51AsFiEajYLL5fqMZI9o9U1OyuXyJ1I8mUxguVwCah+8Xi/0
        ej0olUrg9/shkUiATqc7xx4amUzmsdlsP8gThsMhLBYL2O12sN/voV6vg8/ng0ajQYVWKhUIh8MgkUjc
        2E4QUqn0wmw2g0qlgnw+D9vtluoil8tBOp2Gfr8P/9hsNpBKpSAYDP7k8/kvcQTxArV1abfbwWQyQSaT
        AbfbTZ1+OByw9ZrRaASBQAAcDsc35H1CJTCZzFP00XYGg4EqzmYzLL+dbrdLjaZWq99RASSopTdWqxU8
        Hg+sVissPQ4a45LBYJxhO41YLL4wGo1AXp7b2idZr9cQi8U+Ivlz2nWTp3K5/ItGo4FqtYot17RarZFA
        IHiNtUeRa7XaK6VSSc1KMp1Of6N78B7VhLTkHths9hn6M3/0ej1ks9nvPB7PhksPh8PhvGWxWFW0fEa/
        +X9Y+LkDgvgLARtluo6SdAgAAAAASUVORK5CYII=
</value>
  </data>
</root>